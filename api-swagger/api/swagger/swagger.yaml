swagger: "2.0"
info:
  version: "0.0.1"
  title: MusicRoomAPI
host: localhost:3001
basePath: /
schemes:
  # tip: remove http to make production-grade
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  "/api/user/log-in":
    x-swagger-router-controller: login
    post:
      tags:
        - User
      # description: Route to classic log in
      operationId: classicLogin
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/LoginInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LoginResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/user/facebook-log-in":
    # binds a127 app logic to a route
    x-swagger-router-controller: login
    post:
      tags:
        - User
      # description: Route to facebook log in
      operationId: facebookLogin
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SocialLoginInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LoginResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/user/google-log-in":
    x-swagger-router-controller: login
    post:
      tags:
        - User
      # description: Route to google log in
      operationId: googleLogin
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/SocialLoginInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LoginResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/user/sign-in":
    x-swagger-router-controller: user
    post:
      tags:
        - User
      # description: Route to create an account
      operationId: signIn
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/LoginInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/user/account-validation":
    x-swagger-router-controller: user
    get:
      tags:
        - User
      # description: Route to validate new account
      operationId: accountValidation
      parameters:
        - in: query
          name: token
          type: string
          description: token can be found in your mails
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/user/recover":
    x-swagger-router-controller: user
    post:
      tags:
        - User
      # description: Route to recover account
      operationId: recover
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/RecoverInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/user/new-password":
    x-swagger-router-controller: user
    get:
      tags:
        - User
      # description: Route to create new password
      operationId: newPassword
      parameters:
        - in: query
          name: token
          type: string
          description: token can be found in your mails
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/user/update-data":
    x-swagger-router-controller: user
    post:
      tags:
        - User
      # description: Route to update simple user data
      operationId: updateData
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/UpdateUserDataInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/user/update-privacy":
    x-swagger-router-controller: user
    post:
      tags:
        - User
      # description: Route to update simple user data
      operationId: updatePrivacy
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/UpdatePrivacyInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/user/link-account":
    x-swagger-router-controller: user
    post:
      tags:
        - User
      # description: Route to update simple user data
      operationId: linkAccount
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/LinkAccountInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/user/unlink-account":
    x-swagger-router-controller: user
    post:
      tags:
        - User
      # description: Route to update simple user data
      operationId: unlinkAccount
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/UnlinkAccountInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/mtv/events":
    x-swagger-router-controller: mtv
    get:
      tags:
        - Music Track Vote
      # description: Route to update simple user data
      operationId: getEvents
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Events"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/mtv/event":
    x-swagger-router-controller: mtv
    post:
      tags:
        - Music Track Vote
      # description: Route to update simple user data
      operationId: createEvent
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/CreateEventInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Events"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Music Track Vote
      # description: Route to update simple user data
      operationId: deleteEvent
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/DeleteEventInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Events"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      tags:
        - Music Track Vote
      # description: Route to update simple user data
      operationId: updateData
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/UpdateEventDataInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Events"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/mtv/tracks":
    x-swagger-router-controller: mtv
    get:
      tags:
        - Music Track Vote
      # description: Route to update simple user data
      operationId: getTracks
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: query
          name: playlistId
          type: string
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TracksMTV"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/mtv/track":
    x-swagger-router-controller: mtv
    post:
      tags:
        - Music Track Vote
      # description: Route to update simple user data
      operationId: addTrack
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/AddTrackInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TracksMTV"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Music Track Vote
      # description: Route to update simple user data
      operationId: removeTrack
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/DeleteTrackInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TracksMTV"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/mtv/track/vote":
    x-swagger-router-controller: mtv
    post:
      tags:
        - Music Track Vote
      # description: Route to update simple user data
      operationId: voteTrack
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/VoteTrackInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TracksMTV"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/mpe/playlists":
    x-swagger-router-controller: mpe
    get:
      tags:
        - Music Playlist Editor
      # description: Route to update simple user data
      operationId: getPlaylists
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Playlists"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/mpe/playlist":
    x-swagger-router-controller: mpe
    post:
      tags:
        - Music Playlist Editor
      # description: Route to update simple user data
      operationId: createPlaylist
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/CreatePlaylistInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Playlists"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Music Playlist Editor
      # description: Route to update simple user data
      operationId: deletePlaylist
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/DeletePlaylistInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Playlists"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      tags:
        - Music Playlist Editor
      # description: Route to update simple user data
      operationId: updatePlaylistData
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/UpdatePlaylistDataInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Playlists"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/mpe/tracks":
    x-swagger-router-controller: mpe
    get:
      tags:
        - Music Playlist Editor
      # description: Route to update simple user data
      operationId: getPlaylistTracks
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: query
          name: playlistId
          type: string
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TracksMPE"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/mpe/track":
    x-swagger-router-controller: mpe
    post:
      tags:
        - Music Playlist Editor
      # description: Route to update simple user data
      operationId: addPlaylistTrack
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/AddTrackInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TracksMPE"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Music Playlist Editor
      # description: Route to update simple user data
      operationId: removePlaylistTrack
      parameters:
        - in: header
          name: X-SessionID
          type: string
          description: your sessionId here
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/DeleteTrackInput"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TracksMPE"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/api/deezer/search":
    x-swagger-router-controller: deezer
    get:
      tags:
        - Deezer
      # description: Route to update simple user data
      operationId: search
      parameters:
        - in: query
          name: query
          type: string
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SearchTrackResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw

definitions:
  UnlinkAccountInput:
    required:
      - type
    properties:
      type:
        type: string
  LinkAccountInput:
    required:
      - type
      - key
    properties:
      type:
        type: string
      key:
        type: string
  UpdatePrivacyInput:
    required:
      - dataType
      - privacyValue
    properties:
      dataType:
        type: string
      privacyValue:
        type: string
  UpdateUserDataInput:
    required:
      - toChange
      - newValue
    properties:
      toChange:
        type: string
      newValue:
        type: string
  RecoverInput:
    required:
      - email
    properties:
      email:
        type: string
  LoginInput:
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
  SocialLoginInput:
    required:
      - email
      - userToken
    properties:
      email:
        type: string
      userToken:
        type: string
  LoginResponse:
    properties:
      sessionId:
        type: string
      user:
        $ref: "#/definitions/User"
  User:
    properties:
      email:
        type: string
      name:
        type: string
      firstname:
        type: string
      avatarUri:
        type: string
      deezer:
        type: boolean
      facebook:
        type: boolean
      google:
        type: boolean
      tags:
        type: array
        items:
          type: string
      privacy:
        type: object
  Events:
    type: array
    items:
      $ref: "#/definitions/Event"
  Event:
    properties:
      id:
        type: string
      name:
        type: string
      canEdit:
        type: boolean
      playlistId:
        type: number
      visibility:
        $ref: "#/definitions/Visibility"
      vote:
        $ref: "#/definitions/Vote"
  Editability:
    properties:
      privacy:
        type: string
      allowedUsers:
        type: array
        items:
          type: string
  Visibility:
    properties:
      privacy:
        type: string
      allowedUsers:
        type: array
        items:
          type: string
  Vote:
    properties:
      privacy:
        type: string
      allowedUsers:
        type: array
        items:
          type: string
      restriction:
        $ref: "#/definitions/Restriction"
  Restriction:
    properties:
      isRestricted:
        type: boolean
      location:
        type: string
      maxDistance:
        type: integer
      startDate:
        type: integer
      endDate:
        type: integer
  CreateEventInput:
    required:
      - location
      - name
    properties:
      location:
        type: string
      name:
        type: string
  DeleteEventInput:
    required:
      - eventId
    properties:
      eventId:
        type: string
  UpdateEventDataInput:
    required:
      - toChange
      - newValue
      - eventId
    properties:
      toChange:
        type: string
      newValue:
        type: string
      eventId:
        type: string
  TrackMPE:
    properties:
      id:
        type: number
      albumCover:
        type: string
      artistName:
        type: string
      previewUrl:
        type: string
      title:
        type: string
  TrackMTV:
    properties:
      id:
        type: number
      albumCover:
        type: string
      artistName:
        type: string
      previewUrl:
        type: string
      title:
        type: string
      numberOfVote:
        type: number
  TracksMPE:
    type: array
    items:
      $ref: "#/definitions/TrackMPE"
  TracksMTV:
    type: array
    items:
      $ref: "#/definitions/TrackMTV"
  AddTrackInput:
    required:
      - playlistId
      - trackId
    properties:
      playlistId:
        type: number
      trackId:
        type: number
  DeleteTrackInput:
    required:
      - playlistId
      - trackId
    properties:
      playlistId:
        type: number
      trackId:
        type: number
  VoteTrackInput:
    required:
      - eventId
      - trackId
      - value
      - location
    properties:
      eventId:
        type: string
      trackId:
        type: number
      value:
        type: integer
      location:
        type: string
  Playlists:
    type: array
    items:
      $ref: "#/definitions/Playlist"
  Playlist:
    properties:
      id:
        type: string
      name:
        type: string
      canEdit:
        type: boolean
      playlistId:
        type: number
      visibility:
        $ref: "#/definitions/Visibility"
      editability:
        $ref: "#/definitions/Editability"
  CreatePlaylistInput:
    required:
      - name
    properties:
      name:
        type: string
  DeletePlaylistInput:
    required:
      - playlistId
    properties:
      playlistId:
        type: string
  UpdatePlaylistDataInput:
    required:
      - toChange
      - newValue
      - playlistId
    properties:
      toChange:
        type: string
      newValue:
        type: string
      playlistId:
        type: string
  SearchTrackResponse:
    properties:
      message:
        type: string
      query:
        type: string
      results:
        type: object
  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - error
    properties:
      error:
        type: string
